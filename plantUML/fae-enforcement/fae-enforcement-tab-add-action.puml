@startuml
actor "FAE User" as user
participant "Defendant Account\n(Enforcement tab)" as page <<UI Page>> #lightskyblue
participant "Select Enforcement" as enfpage <<UI Page>> #lightskyblue
participant "Add Enforcement" as enfdetpage <<UI Page>> #lightskyblue
participant "Get Results" as resapi <<Fines API>> #lightgreen
participant "Get Result" as reapi <<Fines API>> #lightgreen
participant "Add Defendant Account \nEnforcement" as nextenfapi <<Fines API>> #lightgreen
database "Add Defendant Account \nEnforcement" as nextenfsp <<Fines SP>>  #lightgreen
database "Results Data" as resdb <<Fines DB>>  #lightgreen
participant "Add Defendant Account \nEnforcement" as gmasdac <<GMAS DAC>> #yellow
database "Add Defendant Account \nEnforcement" as gobdb <<GOB SP>> #yellow
user -> page ++: Select <b>Add enforcement action</b> link
page -> enfpage --++: route to
enfpage --> resapi ++: Get Results
resapi --> resdb ++ : Result filters (JPA)
resapi <-- resdb --: Result data
resapi --> enfpage --: Result data (JSON)
user -> enfpage : Select Enforcement Action from the list and click 'Continue' button
enfpage -> enfdetpage --++: route to
enfdetpage --> reapi ++: Get Result
reapi --> resdb ++ : Result ID (JPA)
reapi <-- resdb --: Result data
reapi --> enfdetpage --: Result data (JSON)
user -> enfdetpage : Enter enforcement action details and click 'Add Enforcement action' button
enfdetpage --> nextenfapi --++: Defendant Account ID & \npayload (JSON)
alt Opal Mode
nextenfapi --> nextenfsp ++: Defendant Account ID & \nInput parameters
nextenfapi <-- nextenfsp --: Added Enforcement Action
else Legacy Mode
nextenfapi --> gmasdac ++: Defendant Account ID & Payload JSON (XML Wrapper)
gmasdac -> gmasdac: Convert JSON to XML
gmasdac --> gobdb ++: Defendant Account ID & Payload (XML)
gobdb --> gmasdac --: Added Enforcement Action (XML)
gmasdac --> nextenfapi --: Added Enforcement Action (XML)
nextenfapi -> nextenfapi: Convert XML to JSON
end
page <-- nextenfapi ++--: Added Enforcement Action (JSON)
@enduml